/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { Button, TextField } from '@mui/material';
import { styled } from '@mui/material/styles';

const Screenshotmain1 = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  overflow: `hidden`,
  height: `581.4864180714151px`,
  width: '100vw',
});

const Section = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `17px 154.90273403871447px 0px 14px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Q = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: theme.typography['Typography']['Subtitle 1'].fontStyle,
  fontFamily: theme.typography['Typography']['Subtitle 1'].fontFamily,
  fontWeight: theme.typography['Typography']['Subtitle 1'].fontWeight,
  fontSize: theme.typography['Typography']['Subtitle 1'].fontSize,
  letterSpacing: theme.typography['Typography']['Subtitle 1'].letterSpacing,
  lineHeight: theme.typography['Typography']['Subtitle 1'].lineHeight,
  textDecoration: theme.typography['Typography']['Subtitle 1'].textDecoration,
  textTransform: theme.typography['Typography']['Subtitle 1'].textTransform,
  alignSelf: `start`,
  margin: `0px`,
}));

const Section1 = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding: `0px 12px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `13px 0px 0px 0px`,
});

const Article = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: `1`,
  margin: `0px`,
});

const ButtonContained = styled(Button)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `0px`,
  color: theme.palette['Primary']['Contrast'],
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `700`,
  fontSize: `15px`,
  letterSpacing: `0.46000000834465027px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
}));

const Q1 = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
  alignSelf: `start`,
  margin: `25px 0px 0px 0px`,
}));

const ButtonContained1 = styled(Button)(({ theme }) => ({
  alignSelf: `stretch`,
  flex: `1`,
  margin: `1px 0px 0px 0px`,
  color: theme.palette['Primary']['Contrast'],
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `700`,
  fontSize: `15px`,
  letterSpacing: `0.46000000834465027px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
}));

const Article1 = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: `1`,
  margin: `1px 0px 0px 5px`,
});

const ButtonContained2 = styled(Button)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `0px`,
  color: theme.palette['Primary']['Contrast'],
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `700`,
  fontSize: `15px`,
  letterSpacing: `0.46000000834465027px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
}));

const Q2 = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
  margin: `24px 0px 0px 0px`,
}));

const Section2 = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px 7px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const TextFieldOutlined = styled(TextField)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `0px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Input Text'].fontStyle,
  fontFamily: theme.typography['Components']['Input Text'].fontFamily,
  fontWeight: theme.typography['Components']['Input Text'].fontWeight,
  fontSize: theme.typography['Components']['Input Text'].fontSize,
  letterSpacing: theme.typography['Components']['Input Text'].letterSpacing,
  lineHeight: theme.typography['Components']['Input Text'].lineHeight,
  textDecoration: theme.typography['Components']['Input Text'].textDecoration,
  textTransform: theme.typography['Components']['Input Text'].textTransform,
}));

const TextFieldOutlined1 = styled(TextField)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `15px 0px 0px 0px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Input Text'].fontStyle,
  fontFamily: theme.typography['Components']['Input Text'].fontFamily,
  fontWeight: theme.typography['Components']['Input Text'].fontWeight,
  fontSize: theme.typography['Components']['Input Text'].fontSize,
  letterSpacing: theme.typography['Components']['Input Text'].letterSpacing,
  lineHeight: theme.typography['Components']['Input Text'].lineHeight,
  textDecoration: theme.typography['Components']['Input Text'].textDecoration,
  textTransform: theme.typography['Components']['Input Text'].textTransform,
}));

const TextFieldOutlined2 = styled(TextField)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `15px 0px 0px 0px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Input Text'].fontStyle,
  fontFamily: theme.typography['Components']['Input Text'].fontFamily,
  fontWeight: theme.typography['Components']['Input Text'].fontWeight,
  fontSize: theme.typography['Components']['Input Text'].fontSize,
  letterSpacing: theme.typography['Components']['Input Text'].letterSpacing,
  lineHeight: theme.typography['Components']['Input Text'].lineHeight,
  textDecoration: theme.typography['Components']['Input Text'].textDecoration,
  textTransform: theme.typography['Components']['Input Text'].textTransform,
}));

const Section3 = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-end`,
  padding: `0px 7px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `3px 0px 0px 0px`,
});

const ButtonContained3 = styled(Button)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `0px`,
  color: theme.palette['Primary']['Contrast'],
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `700`,
  fontSize: `15px`,
  letterSpacing: `0.46000000834465027px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
}));

const Section4 = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 7px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const TextFieldOutlined3 = styled(TextField)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `0px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Input Text'].fontStyle,
  fontFamily: theme.typography['Components']['Input Text'].fontFamily,
  fontWeight: theme.typography['Components']['Input Text'].fontWeight,
  fontSize: theme.typography['Components']['Input Text'].fontSize,
  letterSpacing: theme.typography['Components']['Input Text'].letterSpacing,
  lineHeight: theme.typography['Components']['Input Text'].lineHeight,
  textDecoration: theme.typography['Components']['Input Text'].textDecoration,
  textTransform: theme.typography['Components']['Input Text'].textTransform,
}));

const Q3 = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
  alignSelf: `start`,
  margin: `11px 0px 0px 0px`,
}));

const Section5 = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px 7px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `3px 0px 0px 0px`,
});

const TextFieldOutlined4 = styled(TextField)(({ theme }) => ({
  alignSelf: `stretch`,
  margin: `0px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Input Text'].fontStyle,
  fontFamily: theme.typography['Components']['Input Text'].fontFamily,
  fontWeight: theme.typography['Components']['Input Text'].fontWeight,
  fontSize: theme.typography['Components']['Input Text'].fontSize,
  letterSpacing: theme.typography['Components']['Input Text'].letterSpacing,
  lineHeight: theme.typography['Components']['Input Text'].lineHeight,
  textDecoration: theme.typography['Components']['Input Text'].textDecoration,
  textTransform: theme.typography['Components']['Input Text'].textTransform,
}));

const Section6 = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 7px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
});

const Q4 = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
  alignSelf: `start`,
  margin: `0px`,
}));

const Q5 = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: theme.typography['Typography']['Subtitle 1'].fontStyle,
  fontFamily: theme.typography['Typography']['Subtitle 1'].fontFamily,
  fontWeight: theme.typography['Typography']['Subtitle 1'].fontWeight,
  fontSize: theme.typography['Typography']['Subtitle 1'].fontSize,
  letterSpacing: theme.typography['Typography']['Subtitle 1'].letterSpacing,
  lineHeight: theme.typography['Typography']['Subtitle 1'].lineHeight,
  textDecoration: theme.typography['Typography']['Subtitle 1'].textDecoration,
  textTransform: theme.typography['Typography']['Subtitle 1'].textTransform,
  alignSelf: `start`,
  margin: `13px 0px 0px 0px`,
}));

const Section7 = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px 7px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `17px 0px 0px 0px`,
});

const Q6 = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
  alignSelf: `center`,
  margin: `0px`,
}));

const Section8 = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 7px 17px 7px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `13px 0px 0px 0px`,
});

const Q7 = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: theme.typography['Typography']['Subtitle 1'].fontStyle,
  fontFamily: theme.typography['Typography']['Subtitle 1'].fontFamily,
  fontWeight: theme.typography['Typography']['Subtitle 1'].fontWeight,
  fontSize: theme.typography['Typography']['Subtitle 1'].fontSize,
  letterSpacing: theme.typography['Typography']['Subtitle 1'].letterSpacing,
  lineHeight: theme.typography['Typography']['Subtitle 1'].lineHeight,
  textDecoration: theme.typography['Typography']['Subtitle 1'].textDecoration,
  textTransform: theme.typography['Typography']['Subtitle 1'].textTransform,
  alignSelf: `start`,
  margin: `0px`,
}));

const Q8 = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
  alignSelf: `start`,
  margin: `16px 0px 0px 0px`,
}));

const Q9 = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: theme.typography['Typography']['Subtitle 1'].fontStyle,
  fontFamily: theme.typography['Typography']['Subtitle 1'].fontFamily,
  fontWeight: theme.typography['Typography']['Subtitle 1'].fontWeight,
  fontSize: theme.typography['Typography']['Subtitle 1'].fontSize,
  letterSpacing: theme.typography['Typography']['Subtitle 1'].letterSpacing,
  lineHeight: theme.typography['Typography']['Subtitle 1'].lineHeight,
  textDecoration: theme.typography['Typography']['Subtitle 1'].textDecoration,
  textTransform: theme.typography['Typography']['Subtitle 1'].textTransform,
  alignSelf: `start`,
  margin: `16px 0px 0px 0px`,
}));

const Q10 = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: theme.typography['Typography']['Body 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Body 2'].textDecoration,
  textTransform: theme.typography['Typography']['Body 2'].textTransform,
  alignSelf: `start`,
  margin: `16px 0px 0px 0px`,
}));

function Screenshotmain(props) {
  return (
    <Screenshotmain1 className={props.className}>
      <Section>
        <Q>{`< Редактор слов`}</Q>
      </Section>
      <Section1>
        <Article>
          <ButtonContained
            variant="contained"
            disabled={false}
            size={'large'}
            color={'primary'}
          >
            {'Список'}
          </ButtonContained>
          <Q1>{`Слово 1`}</Q1>
        </Article>
        <ButtonContained1
          variant="contained"
          disabled={false}
          size={'large'}
          color={'primary'}
        >
          {'Импорт'}
        </ButtonContained1>
        <Article1>
          <ButtonContained2
            variant="contained"
            disabled={false}
            size={'large'}
            color={'primary'}
          >
            {'Поиск'}
          </ButtonContained2>
          <Q2>{`Статус : На изучении`}</Q2>
        </Article1>
      </Section1>
      <Section2>
        <TextFieldOutlined
          disabled={false}
          size={'small'}
          label={'Перевод 1'}
        />
        <TextFieldOutlined1
          disabled={false}
          size={'small'}
          label={'Пропущено'}
        />
        <TextFieldOutlined2 disabled={false} size={'small'} label={'Изучено'} />
      </Section2>
      <Section3>
        <ButtonContained3
          variant="contained"
          disabled={false}
          size={'large'}
          color={'primary'}
        >
          {'Добавить слово'}
        </ButtonContained3>
      </Section3>
      <Section4>
        <TextFieldOutlined3
          disabled={false}
          size={'small'}
          label={'Очистить список'}
        />
        <Q3>{`Добавить слово`}</Q3>
      </Section4>
      <Section5>
        <TextFieldOutlined4
          disabled={false}
          size={'small'}
          label={'Ввести слово'}
        />
      </Section5>
      <Section6>
        <Q4>{`Перевод рядом со словом`}</Q4>
        <Q5>{`Импорт слов`}</Q5>
      </Section6>
      <Section7>
        <Q6>{`Вводите слова , разделенные запятыми`}</Q6>
      </Section7>
      <Section8>
        <Q7>{`Слова будут добавлены в список`}</Q7>
        <Q8>{`Поиск слов`}</Q8>
        <Q9>{`Введите ключевое слово`}</Q9>
        <Q10>{`Выполните поиск слов в списке`}</Q10>
      </Section8>
    </Screenshotmain1>
  );
}

export default Screenshotmain;
